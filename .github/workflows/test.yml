name: Testing

on:
  pull_request:
    types: [edited, reopened, ready_for_review, synchronize, opened]

env:
  ORGANIZATION: proyectos-enee

jobs:
  testing-frontend:
    runs-on: utcd-dev-infra1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Runing building test
        run: |
          cd frontend
          pnpm install
          pnpm run build

  testing-backend:
    runs-on: utcd-dev-infra1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Definir DOTNET_ROOT y agregarlo al PATH
        run: |
          echo "DOTNET_ROOT=$HOME/.dotnet" >> $GITHUB_ENV
          echo "$HOME/.dotnet:$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Verificar si .NET ya está instalado
        run: |
          if [ -x "$(command -v dotnet)" ]; then
            echo "DOTNET_ALREADY_INSTALLED=true" >> $GITHUB_ENV
          else
            echo "DOTNET_ALREADY_INSTALLED=false" >> $GITHUB_ENV
          fi

      - name: Instalar .NET si no está presente
        if: env.DOTNET_ALREADY_INSTALLED == 'false'
        run: |
          mkdir -p $HOME/.dotnet
          curl -L https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh | bash /dev/stdin --install-dir $HOME/.dotnet --version 8.0.100

      - name: Verificar instalación de .NET
        run: dotnet --version

      - name: Agregar source de nuget
        run: |
          dotnet nuget remove source github || true
          dotnet nuget add source https://nuget.pkg.github.com/${{ env.ORGANIZATION }}/index.json --name github --username ${{ github.actor }} --password ${{ vars.ACCESS_TOKEN }} --store-password-in-clear-text

      - name: Runing building test
        env:
          DB__CONEXION: 'Server=localhost;Database=enee;User Id=postgres; Password=P@ssword1234;Enlist=true;'
          DB__SCHEMA_EVENTS: cobro_prejuridico_events
          DB__SCHEMA_DOCS: cobro_prejuridico_docs
          DB__SCHEMA_TABLES: cobro_prejuridico_enee
          AUTH__SERVER: http://localhost:8080
          AUTH__CORS_ORIGINS: http://localhost:5173
          AUTH__CLIENT_ID: api
          AUTH__CLIENT_SECRET: api
          AUTH__AUDIENCE: api
          QUEUE__SERVER: amqp://localhost:5672
          QUEUE__USER: rabbitmq
          QUEUE__PASSWORD: Cambiar*001
          MONITORING__OTL_METRICS_ENDPOINT: http://localhost:4317
          MONITORING__OTL_TRACES_ENDPOINT: http://localhost:4318
        run: |
          cd backend
          cd utcd.cobro_prejuridico.Api
          dotnet restore utcd.cobro_prejuridico.Api.csproj
          dotnet run -- codegen write
          dotnet build "utcd.cobro_prejuridico.Api.csproj" -c Release

  testing-mobile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Running build and test
        run: |
          cd mobile
          pnpm install
          pnpm exec expo export
